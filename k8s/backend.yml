apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: etoapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: etoosamoe/eto-backend:latest
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_HOST
        - name: DB_CONN
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):5432/$(POSTGRES_DB)"
        - name: BACKEND_VERSION
          value: "0.2.1"
        ports:
        - containerPort: 8000
        livenessProbe:
          httpGet:
            path: /api/healthcheck
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: etoapp
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: backend


---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: etoapp
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: backend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: etoapp
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: backend.etoapp
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8000
